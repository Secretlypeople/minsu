<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.mapper.HomeMapper" >

    <!--
         resultType 返回一个具体的java 类对象
         resultMap 返回一个映射 把数据库中的字段映射成实体类的属性
    -->
    <!--List<Content> queryContent();-->
  <select id="queryContent" resultType="com.jk.dto.Content">
     select * from t_content

  </select>

    <!-- User login(String username);-->
    <select id="login" resultType="com.jk.dto.User" parameterType="java.lang.String">
    select * from t_user t
    left join t_user_info tu on t.userId=tu.userId where tu.userId=t.userId and username=#{username}

    </select>

    <!-- String register(User user);-->
    <insert id="register"  parameterType="com.jk.dto.User">
        insert into t_user(username,userpassword,phone,email) values(#{username},#{userpassword},#{phone},#{email})
    </insert>

    <!--List<Story> queryStory();-->
    <select id="queryStory" resultType="com.jk.dto.Story">

        select * from t_story
    </select>

    <!--Story queryStoryById(Integer id);-->
    <select id="queryStoryById" resultType="com.jk.dto.Story" parameterType="java.lang.Integer">
        select t.*,tu.username username,tu.img userImg from t_story t
        left join t_user tu on tu.userId=t.userId
        where t.id=#{id}

    </select>

    <!--List<Story> queryMyworks(Integer userId);-->
    <select id="queryMyworks" resultType="com.jk.dto.Story" parameterType="java.lang.Integer">

        select * from t_story where userId=#{userId}
    </select>

    <!-- User queryInstall(Integer userId);-->
    <select id="queryInstall" resultType="com.jk.dto.UserInfo" parameterType="java.lang.Integer">

        select t.username userName,tu.* from t_user t
        left join t_user_info tu on t.userId=tu.userId
        where tu.userId=#{userId}
    </select>

    <!--  void upateSigcard(UserInfo userInfo);-->
    <update id="upateSigcard" >
        update t_user_info
         set sigcard=#{sigcard}
         where userId=#{userId}
    </update>

   <!-- void upateEmail(UserInfo userInfo);-->
    <update id="upateEmail" >
        update t_user_info
         set email=#{email}
         where userId=#{userId}
    </update>
  <!--  void upatePhone(UserInfo userInfo);-->
    <update id="upatePhone" >
        update t_user_info
         set phone=#{phone}
         where userId=#{userId}
    </update>

</mapper>